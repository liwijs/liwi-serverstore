{"version":3,"sources":["../src/server.js"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["exports.initialize = function(io, serverStore) {\n    io.on('connection', function(socket) {\n        let openCursors = new Map;\n        let timeouts = new Map;\n        let activeListeners = new Map;\n\n        socket.on('disconnect', function() {\n            openCursors.forEach(cursor => cursor.close());\n            openCursors.clear();\n            openCursors = null;\n\n            timeouts.forEach(timeout => clearTimeout(timeout));\n            timeouts.clear();\n            timeouts = null;\n\n            activeListeners.forEach(activeListener => {\n                activeListener.service.unsubscribe(activeListener.listeners);\n            });\n\n            activeListeners.clear();\n            activeListeners = null;\n        });\n\n        socket.on('connectedUser', function(response) {\n            const userRestService = serverStore.restService('user');\n            userRestService.findConnected(socket.connectedUser).then((user) => {\n                if (!user) {\n                    return response(null);\n                }\n\n                response(null, {\n                    connected: socket.connectedUser,\n                    user: userRestService.transform(user),\n                });\n            }).catch((err) => response(err));\n        });\n\n        let nextIdCursor = 1;\n        socket.on('db cursor', function(dbName, modelName, query, options, response) {\n            const idCursor = nextIdCursor++;\n            const restService = serverStore.restService(modelName);\n            if (!restService) {\n                response(null);\n                throw new Error('restService missing: ' + modelName);\n            }\n\n            query = restService.query(socket.connectedUser, query);\n            restService.service.findAll().query(query).cursor().then((cursor) => {\n                if (!cursor) {\n                    return response();\n                }\n\n                // TODO cursor.isEmpty()\n                cursor.count().then((count) => {\n                    // console.log(idCursor, 'count = ', count);\n                    if (!count) {\n                        cursor.close();\n                        return response(null);\n                    }\n\n                    const closeCursor = function() {\n                        cursor.close();\n                        openCursors.delete(idCursor);\n                        timeouts.delete(idCursor);\n                        socket.removeAllListeners('db cursor ' + idCursor);\n                    };\n\n                    const closeTimeout = setTimeout(function() {\n                        console.log('cursor closed by timeout ' + idCursor);\n                        closeCursor();\n                    }, 5 * 60 * 1000);\n                    openCursors.set(idCursor, cursor);\n                    timeouts.set(idCursor, closeTimeout);\n\n                    // TODO timeouts\n                    socket.on('db cursor ' + idCursor, (instruction, response) => {\n                        console.log('db cursor ' + idCursor + ' ' + instruction);\n                        if (instruction === 'next') {\n                            cursor.next().then((key) => {\n                                if (!key) {\n                                    return response(null);\n                                }\n\n                                return cursor.result().then((data) => {\n                                    response(null, restService.transform(data));\n                                });\n                            }, () => {\n                                response(null);\n                            });\n                        } else if (instruction === 'forEach') {\n                            cursor.forEachResults(function(result) {\n                                socket.emit('db cursor forEach ' + idCursor, result && restService.transform(result));\n                            }).then(function() {\n                                response(null);\n                            });\n                        } else if (instruction === 'close') {\n                            clearTimeout(closeTimeout);\n                            closeCursor();\n                            response(null);\n                        } else if (instruction === 'advance') {\n                            cursor.advance().then(() => response(null));\n                        }\n                    });\n                    return response(null, idCursor);\n                });\n            });\n        });\n\n        socket.on('db findOne', function(dbName, modelName, query, options, response) {\n            const restService = serverStore.restService(modelName);\n            query = restService.query(socket.connectedUser, query);\n            restService.service.findOne().query(query).fetch().then((vo) => {\n                response(null, vo && restService.transform(vo.data));\n            }).catch((err) => {\n                console.log(err.stack);\n                response(err);\n            });\n        });\n\n        socket.on('db insert', function(dbName, modelName, data, response) {\n            const restService = serverStore.restService(modelName);\n            let vo = restService.service.createNewVO(data);\n            vo = restService.prepareInsert(socket.connectedUser, vo);\n            restService.service.insert(vo).then(() => {\n                response(null, restService.transform(vo.data));\n            }).catch((err) => {\n                response(err);\n            });\n        });\n\n        let nextIdListener = 1;\n        socket.on('subscribe', function(dbName, modelName, query, response) {\n            const idListener = nextIdListener++;\n            const restService = serverStore.restService(modelName);\n            const listeners = {\n                query: restService.query(socket.connectedUser, query),\n                inserted: function(vo) {\n                    console.log('sending insert', idListener);\n                    socket.emit(idListener + ' event', { type: 'inserted', data: restService.transform(vo.data) });\n                },\n                updated: function(vo) {\n                    console.log('sending update', idListener);\n                    socket.emit(idListener + ' event', { type: 'updated', data: restService.transform(vo.data) });\n                },\n                deleted: function(vo) {\n                    console.log('sending delete', idListener);\n                    socket.emit(idListener + ' event', { type: 'deleted', data: restService.transform(vo.data) });\n                },\n            };\n            console.log('scoket subscribing ', listeners);\n            restService.service.subscribe(listeners);\n            activeListeners.set(idListener, { service: restService.service, listeners });\n            socket.on('unsubscribe ' + idListener, function(response) {\n                console.log('scoket unsubscribing ', listeners);\n                restService.service.unsubscribe(listeners);\n                activeListeners.delete(idListener);\n                response(null);\n            });\n            response(null, idListener);\n        });\n    });\n};\n"]}