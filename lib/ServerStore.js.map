{"version":3,"sources":["../src/ServerStore.js"],"names":[],"mappings":"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","file":"ServerStore.js","sourcesContent":["import AbstractStore from 'liwi/lib/AbstractStore';\nimport Cursor from './Cursor';\nimport webSocket from 'springbokjs-browser/webSocket';\n\nexport class ServerStore extends AbstractStore {\n    initialize() {\n    }\n\n    store() {\n    }\n\n    findOne(query, options) {\n        const modelName = this.manager.VO.name[0].toLowerCase() + this.manager.VO.name.substr(1);\n        return webSocket.emit('db findOne', this.db.dbName, modelName, query, options);\n    }\n\n    insert(options) {\n        const modelName = this.manager.VO.name[0].toLowerCase() + this.manager.VO.name.substr(1);\n        return webSocket.emit('db insert', this.db.dbName, modelName, options).then((result) => {\n            if (result) {\n                Object.assign(options.fullData, result);\n            }\n        });\n    }\n\n    update(options) {\n        throw new Error();\n    }\n\n    delete(options) {\n        throw new Error();\n    }\n\n    cursor(query, options) {\n        const modelName = this.manager.VO.name[0].toLowerCase() + this.manager.VO.name.substr(1);\n        return webSocket.emit('db cursor', this.db.dbName, modelName, query, options).then((idCursor) => {\n            if (!idCursor) {\n                return;\n            }\n\n            return new Cursor(idCursor, this, query);\n        });\n    }\n\n    subscribe(listeners) {\n        const modelName = this.manager.VO.name[0].toLowerCase() + this.manager.VO.name.substr(1);\n        return webSocket.emit('subscribe', this.db.dbName, modelName, listeners.query).then((listenerId) => {\n            listeners.listenerId = listenerId;\n            console.log('listing for: ' + listenerId + ' event');\n            webSocket.on(listenerId + ' event', (result) => {\n                const { type, data } = result;\n                console.log('received event', type, data);\n                if (listeners[type]) {\n                    listeners[type](this.toVO(data));\n                }\n            });\n        });\n    }\n\n    unsubscribe(listeners) {\n        webSocket.off(listeners.listenerId + ' event');\n        return webSocket.emit('unsubscribe ' + listeners.listenerId);\n    }\n}\n\nServerStore.initialize = function(db) {\n    return Promise.resolve();\n};\n"]}